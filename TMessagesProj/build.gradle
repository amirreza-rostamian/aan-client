apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'


repositories {
    mavenCentral()
    google()
    jcenter()
    flatDir {
        dirs 'libs'
    }
}

configurations {
    compile.exclude module: 'support-v4'
}

dependencies {
    implementation 'com.android.support:multidex:1.0.3'
    compileOnly 'org.checkerframework:checker-qual:2.5.0'
    compileOnly 'org.checkerframework:checker-compat-qual:2.5.0'
    implementation 'com.google.firebase:firebase-core:16.0.7'
    implementation 'com.google.firebase:firebase-messaging:17.3.4'
    implementation 'com.google.firebase:firebase-config:16.3.0'
    implementation 'com.google.android.gms:play-services-maps:15.0.1'
    implementation 'com.google.android.gms:play-services-vision:15.0.2'
    implementation 'com.google.android.gms:play-services-wallet:16.0.0'
    implementation 'com.google.android.gms:play-services-wearable:15.0.1'
    implementation 'com.google.firebase:firebase-analytics:16.3.0'
    implementation 'com.android.support:support-core-ui:28.0.0'
    implementation 'com.android.support:support-compat:28.0.0'
    implementation 'com.mindorks.android:prdownloader:0.4.0'
    implementation 'com.android.support:support-core-utils:28.0.0'
    implementation 'com.android.support:support-v13:28.0.0'
    implementation 'com.android.support:palette-v7:28.0.0'
    implementation 'com.android.support:exifinterface:28.0.0'
    implementation 'net.hockeyapp.android:HockeySDK:5.1.0'
    implementation 'org.webrtc:google-webrtc:1.0.+'
    implementation 'com.googlecode.mp4parser:isoparser:1.0.6'
    implementation 'com.stripe:stripe-android:2.0.2'
    implementation 'me.leolin:ShortcutBadger:1.1.22@aar'
    implementation 'com.android.installreferrer:installreferrer:1.0'
    implementation 'com.adpdigital.push:chabok-lib:2.18.0'
    implementation 'com.google.android.gms:play-services-gcm:16.1.0'
    implementation 'com.batch.android:batch-sdk:+'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //constraint
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    //RoundCornerProgressBar
    implementation 'com.akexorcist:RoundCornerProgressBar:2.0.3'
    //WebSocket
    implementation 'org.java-websocket:Java-WebSocket:1.3.9'
    implementation 'com.github.bumptech.glide:glide:4.7.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.7.1'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support:cardview-v7:28.0.0'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
    implementation project(':message-view')
    implementation 'io.reactivex.rxjava2:rxkotlin:2.1.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.3.0'
    implementation 'org.greenrobot:eventbus:3.0.0'
    implementation 'com.jakewharton:butterknife:8.4.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.3.0'
    implementation 'com.squareup.retrofit2:converter-jackson:2.3.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'com.zolad:videoslimmer:1.0.0'
    implementation 'io.tus.java.client:tus-java-client:0.4.1'
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.8@aar') {
        transitive = true
    }
}

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig.applicationId = "ir.amin.HaftTeen"

//    sourceSets.main.jniLibs.srcDirs = ['./libs/']
    sourceSets.main.jniLibs.srcDirs = ['./jni/']


   /* splits {
        abi {
            enable gradle.startParameter.taskNames.any { it.contains("Release") }
            reset()
            include "x86_64", "x86", "arm64-v8a", "armeabi-v7a"
            universalApk false
        }
    }*/

    externalNativeBuild {
        ndkBuild {
            path "jni/Android.mk"
        }
    }

    lintOptions {
        disable 'MissingTranslation'
        disable 'ExtraTranslation'
    }

    dexOptions {
        jumboMode = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        release {
            storeFile file("config/aan-release-key.keystore")
            storePassword "aan.social"
            keyAlias "ir.amin.HaftTeen"
            keyPassword "aan.social"
        }
    }

    buildTypes {
        def serverUrl =  '\"' + (System.getenv("SERVER_URL")?: "")+'\"'
        def uploadMedia =  '\"' + (System.getenv("UPLOAD_URL")?: "")+'\"'
        def uploadVideo = '\"' + (System.getenv("UPLOAD_VIDEO_URL")?: "")+'\"'
        def serverKey = '\"' + (System.getenv("SERVER_KEY")?: "25c6c7ff35a5979b461b2136cd13b0ff")+'\"'
        def uploadAbrArvan = '\"' + (System.getenv("SERVER_ABR")?: "")+'\"'
        def appId = '\"' + (System.getenv("APP_ID")?: "6")+'\"'
        def randomString = '\"' + (System.getenv("RANDOM_STRING")?: "qwertyuioplkjhgfdsazxcvbnm1234567890")+'\"'
        def secureKey = '\"' + (System.getenv("SECURE_KEY")?: "25c6c7ff35a5979b461b2136cd13b0ff")+'\"'
        debug {
            buildConfigField "String", "SERVER_URL", serverUrl
            buildConfigField "String", "UPLOAD_URL", uploadMedia
            buildConfigField "String", "UPLOAD_VIDEO_URL", uploadVideo
            buildConfigField "String", "SERVER_KEY", serverKey
            buildConfigField "String", "SERVER_ABR", uploadAbrArvan
            buildConfigField "String", "APP_ID", appId
            buildConfigField "String", "SECURE_KEY", secureKey
            buildConfigField "String", "RANDOM_STRING", randomString
            debuggable true
            jniDebuggable true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            useProguard true
        }

        release {
            buildConfigField "String", "SERVER_URL", serverUrl
            buildConfigField "String", "UPLOAD_URL", uploadMedia
            buildConfigField "String", "UPLOAD_VIDEO_URL", uploadVideo
            buildConfigField "String", "SERVER_KEY", serverKey
            buildConfigField "String", "SERVER_ABR", uploadAbrArvan
            buildConfigField "String", "APP_ID", appId
            buildConfigField "String", "SECURE_KEY", secureKey
            buildConfigField "String", "RANDOM_STRING", randomString
            debuggable false
            jniDebuggable false
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            useProguard true
        }

        foss {
            debuggable false
            jniDebuggable false
        }
    }

    sourceSets.debug {
        manifest.srcFile 'config/debug/AndroidManifest.xml'
    }

    sourceSets.release {
        manifest.srcFile 'config/release/AndroidManifest.xml'
    }

    sourceSets.foss {
        manifest.srcFile 'config/foss/AndroidManifest.xml'
    }

    flavorDimensions "minApi"

    productFlavors {
        armv7 {
            ndk {
                abiFilters "armeabi-v7a"
            }
            ext {
                abiVersionCode = 5
            }
        }
        x86 {
            ndk {
                abiFilters "x86"
            }
            ext {
                abiVersionCode = 6
            }
        }
        armv7_SDK23 {
            ndk {
                abiFilters "armeabi-v7a"
            }
            sourceSets.debug {
                manifest.srcFile 'config/debug/AndroidManifest_SDK23.xml'
            }
            sourceSets.release {
                manifest.srcFile 'config/release/AndroidManifest_SDK23.xml'
            }
            minSdkVersion 23
            ext {
                abiVersionCode = 3
            }
        }
        x86_SDK23 {
            ndk {
                abiFilters "x86"
            }
            sourceSets.debug {
                manifest.srcFile 'config/debug/AndroidManifest_SDK23.xml'
            }
            sourceSets.release {
                manifest.srcFile 'config/release/AndroidManifest_SDK23.xml'
            }
            minSdkVersion 23
            ext {
                abiVersionCode = 4
            }
        }
        arm64 {
            ndk {
                abiFilters "arm64-v8a"
            }
            ext {
                abiVersionCode = 7
            }
        }
        x64 {
            ndk {
                abiFilters "x86_64"
            }
            ext {
                abiVersionCode = 8
            }
        }
        arm64_SDK23 {
            ndk {
                abiFilters "arm64-v8a"
            }
            sourceSets.debug {
                manifest.srcFile 'config/debug/AndroidManifest_SDK23.xml'
            }
            sourceSets.release {
                manifest.srcFile 'config/release/AndroidManifest_SDK23.xml'
            }
            minSdkVersion 23
            ext {
                abiVersionCode = 7
            }
        }
        x64_SDK23 {
            ndk {
                abiFilters "x86_64"
            }
            sourceSets.debug {
                manifest.srcFile 'config/debug/AndroidManifest_SDK23.xml'
            }
            sourceSets.release {
                manifest.srcFile 'config/release/AndroidManifest_SDK23.xml'
            }
            minSdkVersion 23
            ext {
                abiVersionCode = 8
            }
        }
        afat {
            sourceSets.debug {
                manifest.srcFile 'config/debug/AndroidManifest_SDK23.xml'
            }
            sourceSets.release {
                manifest.srcFile 'config/release/AndroidManifest_SDK23.xml'
            }
            ext {
                abiVersionCode = 0
            }
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            output.processManifest.doLast {
                def abiVersion = variant.productFlavors.get(0).abiVersionCode
                String manifestPath = "$manifestOutputDirectory/AndroidManifest.xml"
                def manifestContent = file(manifestPath).getText()
                manifestContent = manifestContent.replace(String.format('android:versionCode="%d"', defaultConfig.versionCode), String.format('android:versionCode="%s"', defaultConfig.versionCode * 10 + abiVersion))
                file(manifestPath).write(manifestContent)
            }
        }
    }

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28
        versionName "1.0"
        versionCode 1
        multiDexEnabled true
        vectorDrawables.generatedDensities = ['mdpi', 'hdpi', 'xhdpi', 'xxhdpi']
        vectorDrawables.useSupportLibrary = true
        renderscriptTargetApi 19
        renderscriptSupportModeEnabled true
        externalNativeBuild {
            ndkBuild {
                arguments "NDK_APPLICATION_MK:=jni/Application.mk", "APP_PLATFORM:=android-16", "-j8"
                //"armeabi-v7a", "arm64-v8a", "x86", "x86_64"
                abiFilters "armeabi-v7a"
            }
        }
    }
    androidExtensions {
        experimental = true
    }
}

apply plugin: 'com.google.gms.google-services'
com.google.gms.googleservices.GoogleServicesPlugin.config.disableVersionCheck = true
